name: Build server
on: 
  push:
    branches:
      - release
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configuring env
        id: setpullrequest
        run: |
          PULL_REQUEST=$(cat $GITHUB_EVENT_PATH | jq -r ".pull_request.number")
          if [[ "$PULL_REQUEST" = "null" ]]; then PULL_REQUEST="false"; fi
          echo "::set-output name=PULL_REQUEST::$PULL_REQUEST"
      # Client build
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: checkout
        uses: actions/checkout@v2

      - name: ci
        shell: bash -l {0}
        run: |
          bash -e ./scripts/before_install.sh
          bash -e ./scripts/build.sh
        env:
          BRANCH: ${{ github.ref }}
          BUILD_NUMBER: ${{ github.run_number }}
          PULL_REQUEST: ${{ steps.setpullrequest.outputs.PULL_REQUEST }}
      
      - name: cleanup
        run: bash -e ./scripts/cleanup.sh
      
      - name: cleanup on failure
        if: ${{ failure() }}
        run: bash -e ./scripts/cleanup.sh
        
