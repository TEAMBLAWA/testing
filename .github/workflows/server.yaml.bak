name: Build server
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - release
env:
  SLACK_URL: ${{ secrets.SLACK_URL }}
  GITTER_URL: ${{ secrets.GITTER_URL }}
  SENTRY_API_KEY: ${{ secrets.SENTRY_API_KEY }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  REVIEWABLE_SMTP_URL: ${{ secrets.REVIEWABLE_SMTP_URL }}
  REVIEWABLE_PING_URL: ${{ secrets.REVIEWABLE_PING_URL }}
  REVIEWABLE_LOGGLY_TOKEN: ${{ secrets.REVIEWABLE_LOGGLY_TOKEN }}
  REVIEWABLE_FIREBASE_AUTH: ${{ secrets.REVIEWABLE_FIREBASE_AUTH }}
  REVIEWABLE_STRIPE_SECRET_KEY: ${{ secrets.REVIEWABLE_STRIPE_SECRET_KEY }}
  REVIEWABLE_SERVER_SENTRY_DSN: ${{ secrets.REVIEWABLE_SERVER_SENTRY_DSN }}
  REVIEWABLE_GITHUB_SECRET_TOKEN: ${{ secrets.REVIEWABLE_GITHUB_SECRET_TOKEN }}
  REVIEWABLE_FIREBASE_PRIVATE_KEY: ${{ secrets.REVIEWABLE_FIREBASE_PRIVATE_KEY }}
  REVIEWABLE_GITHUB_CLIENT_SECRET: ${{ secrets.REVIEWABLE_GITHUB_CLIENT_SECRET }}
  REVIEWABLE_ENCRYPTION_PRIVATE_KEYS: ${{ secrets.REVIEWABLE_ENCRYPTION_PRIVATE_KEYS }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SERVICE_ACCOUNT_PRIVATE_KEY: ${{ secrets.SERVICE_ACCOUNT_PRIVATE_KEY }}
  LAST_SHIPPABLE_RUN: 2871
  BRANCH: ${{ github.ref }}
  GITHUB_TOKEN: ${{ github.token }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_URL }}
  BUILD_NUMBER: ${{ github.run_number }}
  REVIEWABLE_HOST_URL: https://reviewable.io
  REVIEWABLE_FIREBASE_CREDENTIALS_FILE: service_account_key.json
  SENTRY_ORG: reviewableio
  SENTRY_PROJECT_ID: reviewableio-server
  SENTRY_PROJECT: reviewableio/reviewableio-server
defaults:
  run:
    shell: bash
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      ####################################
      ##           on build             ##
      ####################################

      # IMPORANT: USE DOUBLEQUOTES (") WITHIN RUN BLOCKS

      # Bug in `act` tool causes git refs to assign with \\ as separators in windows environments
      # Bug: single quotes do not get intepreted correctly in if statements
      - name: Assign SHOULD_RELEASE
        run: |
          if [[ ${{ github.event_name }} != "pull_request" &&
            ($GITHUB_REF == "\\refs\\heads\\release" ||
            $GITHUB_REF == "refs/heads/release") ]]; then
            SHOULD_RELEASE=true;
          else
            SHOULD_RELEASE=false;
          fi
          echo ${{ github.event_name }}
          echo $GITHUB_REF
          echo "SHOULD_RELEASE: $SHOULD_RELEASE"
          echo "SHOULD_RELEASE=$SHOULD_RELEASE" >> $GITHUB_ENV

      - name: Assign BUILD_GROUP_NUMBER
        id: build_group_number
        run: |
          BUILD_GROUP_NUMBER=$(echo $(expr $BUILD_NUMBER + $LAST_SHIPPABLE_RUN))
          echo "BUILD_GROUP_NUMBER=$BUILD_GROUP_NUMBER" >> $GITHUB_ENV
      - name: Assign PULL_REQUEST
        id: setpullrequest
        run: |
          PULL_REQUEST=$(cat $GITHUB_EVENT_PATH | jq -r ".pull_request.number")
          if [[ "$PULL_REQUEST" = "null" ]]; then PULL_REQUEST="false"; fi
          echo "PULL_REQUEST=$PULL_REQUEST" >> $GITHUB_ENV

      # REMOVE ME: when debugging is completed
      - name: Print info
        run: |
          echo "Branch: $BRANCH; pull request: $PULL_REQUEST; build: $BUILD_GROUP_NUMBER"

      - uses: actions/checkout@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}
      - uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install yarn
        run: npm i -g yarn

      - name: Install packages
        run: yarn install --pure-lockfile
      - name: Build
        run: yarn build
      - name: Lint
        run: yarn lint
      - name: Test
        run: yarn test

      ####################################
      ##          on release            ##
      ####################################
      - name: Assign BUILD_URL
        if: env.SHOULD_RELEASE == 'true'
        run: |
          echo "BUILD_URL=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV


      - name: Setup cloud SDK
        if: env.SHOULD_RELEASE == 'true'
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ env.SERVICE_ACCOUNT_PRIVATE_KEY }}
          export_default_credentials: true

      - name: Sentry release
        if: env.SHOULD_RELEASE == 'true'
        uses: getsentry/action-release@v1
        env:
          SENTRY_PROJECT: ${{ env.SENTRY_PROJECT_ID }}
        with:
          sourcemaps: './built/lib ./built ./built/github'
          environment: 'production'
          version: ${{ env.BUILD_GROUP_NUMBER }}
          set_commits: skip

      - name: Create release
        if: env.SHOULD_RELEASE == 'true'
        uses: ncipollo/release-action@v1
        with:
          body: "Build ${{ env.BUILD_GROUP_NUMBER }}"
          tag: "build-${{ env.BUILD_GROUP_NUMBER }}"
          token: ${{ env.GITHUB_TOKEN }}

      - name: Update app.yaml
        if: env.SHOULD_RELEASE == 'true'
        run: |
          echo "Deploying server..."
          echo "  REVIEWABLE_FIREBASE_AUTH: $REVIEWABLE_FIREBASE_AUTH" >>app.yaml
          echo "  REVIEWABLE_FIREBASE_PRIVATE_KEY: $REVIEWABLE_FIREBASE_PRIVATE_KEY" >>app.yaml
          echo "  REVIEWABLE_ENCRYPTION_PRIVATE_KEYS: $REVIEWABLE_ENCRYPTION_PRIVATE_KEYS" >>app.yaml
          echo "  REVIEWABLE_FIREBASE_CREDENTIALS_FILE: $REVIEWABLE_FIREBASE_CREDENTIALS_FILE" >>app.yaml
          echo "  REVIEWABLE_SMTP_URL: $REVIEWABLE_SMTP_URL" >>app.yaml
          echo "  REVIEWABLE_SERVER_SENTRY_DSN: $REVIEWABLE_SERVER_SENTRY_DSN" >>app.yaml
          echo "  REVIEWABLE_PING_URL: $REVIEWABLE_PING_URL" >>app.yaml
          echo "  REVIEWABLE_STRIPE_SECRET_KEY: $REVIEWABLE_STRIPE_SECRET_KEY" >>app.yaml
          echo "  REVIEWABLE_LOGGLY_TOKEN: $REVIEWABLE_LOGGLY_TOKEN" >>app.yaml
          echo "  REVIEWABLE_GITHUB_CLIENT_SECRET: $REVIEWABLE_GITHUB_CLIENT_SECRET" >>app.yaml
          echo "  REVIEWABLE_GITHUB_SECRET_TOKEN: $REVIEWABLE_GITHUB_SECRET_TOKEN" >>app.yaml
          echo "  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY" >>app.yaml
          echo "  REVIEWABLE_VERSION: $BUILD_GROUP_NUMBER" >>app.yaml

      - name: Deploy
        if: env.SHOULD_RELEASE == 'true'
        uses: google-github-actions/deploy-appengine@main
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          deliverables: app.yaml
          version: ${{ env.BUILD_GROUP_NUMBER }}

      - name: Deleting obsolete versions
        if: env.SHOULD_RELEASE == 'true'
        uses: Reviewable/appengine-remove-action@v2
        with:
          limit: 5

      - name: Assign NOTIFICATION
        if: env.SHOULD_RELEASE == 'true'
        run: |
          NOTIFICATION=`echo "{\"level\": \"info\", \"message\": \"Server [build $BUILD_GROUP_NUMBER]($BUILD_URL) deployed\", \"text\": \"Server <$BUILD_URL|build $BUILD_GROUP_NUMBER> deployed\"}"`
          echo "NOTIFICATION=$NOTIFICATION" >> $GITHUB_ENV

      - name: Assign NOTIFICATION on failure
        if: env.SHOULD_RELEASE == 'true' && failure()
        run: |
          NOTIFICATION=`echo "{\"level\": \"error\", \"message\": \"Server [build $BUILD_GROUP_NUMBER]($BUILD_URL) deployment failed\", \"text\": \"Server <$BUILD_URL|build $BUILD_GROUP_NUMBER> deployment failed\"}"`
          echo "NOTIFICATION=$NOTIFICATION" >> $GITHUB_ENV

      - name: Slack Notification
        if: env.SHOULD_RELEASE == 'true'
        uses: Ilshidur/action-slack@2.0.2
        env:
          SLACK_CUSTOM_PAYLOAD: '{{ NOTIFICATION }}'

      - name: Gitter Notification
        if: env.SHOULD_RELEASE == 'true'
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.GITTER_URL }}
          method: 'POST'
          data: ${{ env.NOTIFICATION }}
          timeout: 15000

      ####################################
      ##          on failure            ##
      ####################################
      - name: Delete release on failure
        if: env.SHOULD_RELEASE == 'true' && failure()
        uses: dev-drprasad/delete-tag-and-release@v0.1.3
        with:
          delete_release: true
          tag_name: "build-${{ env.BUILD_GROUP_NUMBER }}" # tag name to delete





